// <auto-generated>

namespace Swagger.Public
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Prototype ASP.NET Core API using the AdventureWorks database. Public
    /// section. No authorization required.
    /// </summary>
    public partial interface IPublicAdventureAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Get a list of products
        /// </summary>
        /// <param name='searchQuery'>
        /// Search for values within the product name, for instance
        /// &lt;b&gt;bike stand&lt;/b&gt; or &lt;b&gt;mountain&lt;/b&gt;
        /// </param>
        /// <param name='color'>
        /// One or more colors to filter on, for instance
        /// &lt;b&gt;black&lt;/b&gt; or &lt;b&gt;black, blue&lt;/b&gt;
        /// </param>
        /// <param name='orderBy'>
        /// By default the results are ordered by &lt;b&gt;name
        /// (ascending)&lt;/b&gt; You can order by &lt;b&gt;color, color desc,
        /// color asc, name, name asc, name desc&lt;/b&gt; or a combination.
        /// </param>
        /// <param name='fields'>
        /// The fields you want to see in the results. For instance
        /// &lt;b&gt;id, name, color&lt;/b&gt;
        /// </param>
        /// <param name='pageNumber'>
        /// Default = 1.
        /// </param>
        /// <param name='pageSize'>
        /// Default = 10. Maximum = 20.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Product>>> ApiPublicProductsGetWithHttpMessagesAsync(string searchQuery = default(string), string color = default(string), string orderBy = default(string), string fields = default(string), int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a single product
        /// </summary>
        /// <param name='id'>
        /// A Guid
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Product>> ApiPublicProductsByIdGetWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a list of product models
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<string>>> ApiPublicProductsModelsGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a list of product colors
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<string>>> ApiPublicProductsColorsGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a list of product categories
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<string>>> ApiPublicProductsCategoriesGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
